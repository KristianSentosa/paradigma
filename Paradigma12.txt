>> Pure Functions
<< Input
def multiply_2_pure(numbers):
    new_numbers = [] // Membuat variabel baru
    for n in numbers:
        new_numbers.append(n * 2)//Untuk pengkali dengan angka asli. sehingga hasil yang dikeluarkan adalah angka setelah dikali angka ini
    return new_numbers

original_numbers = [1, 3, 5, 10]
changed_numbers = multiply_2_pure(original_numbers)
print(original_numbers) # [1, 3, 5, 10]// Angka asli atau angka yang akan dikalikan dengan angka pengkali
print(changed_numbers)  # [2, 6, 10, 20] // Output pengaliangan angka dengan angka 2
//Fungsi Murni Untuk Mengalikan angka dengan angka 2. 
<< Output
(base) C:\Users\Satans\Documents\Python>python Coba6.py
[1, 3, 5, 10]
[2, 6, 10, 20]

>> Immutability
<<Input
mutable_collection = ['Tim', 10, [4, 5]]// Dapat dirubah setelah dibuat
immutable_collection = ('Tim', 10, [4, 5]) // Tidak dapat dirubah

print(mutable_collection[2])    # [4, 5]
print(immutable_collection[2])  # [4, 5]

mutable_collection[1] = 15//

immutable_collection[1] = 15 //Menyebapkan Error Karena Tuple tidak mendukung penetapan item
<<Output 
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[4, 5]
[4, 5]
Traceback (most recent call last):
  File "Coba7.py", line 12, in <module>
    immutable_collection[1] = 15
TypeError: 'tuple' object does not support item assignment

>>Higher Order Functions
<<Input
def write_repeat(message, n):
    for i in range(n)://Melakukan Perulangan
        print(message)// Untuk memanggil output

write_repeat('Hello', 5)//Output untuk menampilkan pesan "Hello" Sebanyak 5 baris
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
Hello
Hello
Hello
Hello
Hello

<<Input
def hof_write_repeat(message, n, action):
    for i in range(n):// Melakukan Perulangan 
        action(message)

hof_write_repeat('Hello', 5, print)
import logging//Untuk mengimport dari Logging untuk memanggil pesan ERROR
hof_write_repeat('Hello', 5, logging.error)//Menampilkan pesan Hello dan juga pesan Error sebanyak 5 Baris per pesan
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
Hello
Hello
Hello
Hello
Hello
ERROR:root:Hello
ERROR:root:Hello
ERROR:root:Hello
ERROR:root:Hello
ERROR:root:Hello

<<Input
def add2(numbers):
    new_numbers = [] //Membuat variabel baru
    for n in numbers: //MErupakan perulangan
        new_numbers.append(n + 2)// Membuat parameter append dengan operasi n+2
    return new_numbers

print(add2([23, 88])) # [25, 90]
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[25, 90]

<<Input
def hof_add(increment):
    def add_increment(numbers):
        new_numbers = [] //Membuat variabel baru
        for n in numbers: //Merupakan perulangan
            new_numbers.append(n + increment)// Membuat parameter append dengan operasi n + Increment
        return new_numbers// Mengembalikan nilai karena ada nilai baru
    return add_increment

add5 = hof_add(5)
print(add5([23, 88]))   # [28, 93]//Untuk Menampilkan Output
add10 = hof_add(10)
print(add10([23, 88]))  # [33, 98]//Untuk Menampilkan Output
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[28, 93]
[33, 98]

>>Lambda Expressions
<<Input
def hof_product(multiplier):
    return lambda x: x * multiplier

mult6 = hof_product(6)// Angka untuk pengkali 
print(mult6(6)) # 36 // Menampilkan juga pendeklarasian angka untuk dikali dengan angka multiplier
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
36

>>Map
<<Input
names = ['Shivani', 'Jason', 'Yusef', 'Sakura']
greeted_names = map(lambda x: 'Hi ' + x, names)
print(greeted_names)
for name in greeted_names: // Merupakan perulangan
    print(name)// Menampilkan dan memanggil dari name
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
<map object at 0x000002217DAEB278>
Hi Shivani
Hi Jason
Hi Yusef
Hi Sakura

>>Filter
<<Input
numbers = [13, 4, 18, 35]
div_by_5 = filter(lambda num: num % 5 == 0, numbers)
print(list(div_by_5)) # [35]
<<output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[35]

>>Combining map and filter
<<Input
arbitrary_numbers = map(lambda num: num ** 3, filter(lambda num: num % 3 == 0, range(1, 21)))

print(list(arbitrary_numbers)) # [27, 216, 729, 1728, 3375, 5832]
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[27, 216, 729, 1728, 3375, 5832]

>>List Comprehensions
<<Input
names = ['Shivani', 'Jan', 'Yusef', 'Sakura']
greeted_names = ['Hi ' + name for name in names]
print(greeted_names) 
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
['Hi Shivani', 'Hi Jan', 'Hi Yusef', 'Hi Sakura']

<<INput
numbers = [13, 4, 18, 35]
div_by_5 = [num for num in numbers if num % 5 == 0]
print(div_by_5) # [35]
arbitrary_numbers = [num ** 3 for num in range(1, 21) if num % 3 == 0]
print(arbitrary_numbers) # [27, 216, 729, 1728, 3375, 5832]
<<Output
(base) C:\Users\Satans\Documents\Python>python Coba7.py
[35]
[27, 216, 729, 1728, 3375, 5832]